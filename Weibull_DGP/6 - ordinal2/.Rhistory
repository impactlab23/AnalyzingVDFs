filter(post_prob_death >= 0.2 & post_prob_liberation >= 0.2) %>%
arrange(desc(max_post))
(hurdle_p_noeffect <- nrow(hurdle_noeffect_power[
hurdle_noeffect_power$max_post >= lambda_hurdle,])/
nrow(hurdle_noeffect))
#--------based on the lambda, calculating "power" for each scenario----------
################## worsening both ################################
hurdle_worsen_both <- hurdle_worsen_both %>%
mutate(X = seq(1, 2000, 1)) %>%
na.omit(hurdle_worsen_both) %>%
filter(V1 != "Error") %>%
mutate(post_prob_death = as.numeric(V1),
post_prob_liberation = as.numeric(V2),
trt_death = as.numeric(V3),
trt_liberation = as.numeric(V4),
sd_death = as.numeric(V5),
sd_extubation = as.numeric(V6))
hurdle_worsen_both <- hurdle_worsen_both %>%
mutate(max_post = pmax(post_prob_death, post_prob_liberation))
hurdle_worsen_both_power <- hurdle_worsen_both %>%
filter(post_prob_death >= 0.2 & post_prob_liberation >= 0.2) %>%
arrange(desc(max_post))
(hurdle_post_p_worsen_both <- nrow(hurdle_worsen_both_power[hurdle_worsen_both_power$max_post >= lambda_hurdle,])/nrow(hurdle_worsen_both))
################## improving both ################################
hurdle_imp_both <- hurdle_imp_both %>%
mutate(X = seq(1, 2000, 1)) %>%
na.omit(hurdle_imp_both) %>%
filter(V1 != "Error") %>%
mutate(post_prob_death = as.numeric(V1),
post_prob_liberation = as.numeric(V2),
trt_death = as.numeric(V3),
trt_liberation = as.numeric(V4),
sd_death = as.numeric(V5),
sd_extubation = as.numeric(V6))
hurdle_imp_both <- hurdle_imp_both %>%
mutate(max_post = pmax(post_prob_death, post_prob_liberation))
hurdle_imp_both_power <- hurdle_imp_both %>%
filter(post_prob_death >= 0.2 & post_prob_liberation >= 0.2) %>%
arrange(desc(max_post))
(hurdle_post_p_imp_both <- nrow(hurdle_imp_both_power[hurdle_imp_both_power$max_post >= lambda_hurdle,])/nrow(hurdle_imp_both))
################## improving liberation worsening mortality ################################
hurdle_imp_lib_worse_mort <- hurdle_imp_lib_worse_mort %>%
mutate(X = seq(1, 2000, 1)) %>%
na.omit(hurdle_imp_lib_worse_mort) %>%
filter(V1 != "Error") %>%
mutate(post_prob_death = as.numeric(V1),
post_prob_liberation = as.numeric(V2),
trt_death = as.numeric(V3),
trt_liberation = as.numeric(V4),
sd_death = as.numeric(V5),
sd_extubation = as.numeric(V6))
hurdle_imp_lib_worse_mort <- hurdle_imp_lib_worse_mort %>%
mutate(max_post = pmax(post_prob_death, post_prob_liberation))
hurdle_imp_lib_worse_mort_power <- hurdle_imp_lib_worse_mort %>%
filter(post_prob_death >= 0.2 & post_prob_liberation >= 0.2) %>%
arrange(desc(max_post))
(hurdle_post_p_imp_lib_worse_mort <- nrow(hurdle_imp_lib_worse_mort_power[hurdle_imp_lib_worse_mort_power$max_post >= lambda_hurdle,])/nrow(hurdle_imp_lib_worse_mort))
################## improving mortality worsening liberation ################################
hurdle_imp_mort_worse_lib <- hurdle_imp_mort_worse_lib %>%
mutate(X = seq(1, 2000, 1)) %>%
na.omit(hurdle_imp_mort_worse_lib) %>%
filter(V1 != "Error") %>%
mutate(post_prob_death = as.numeric(V1),
post_prob_liberation = as.numeric(V2),
trt_death = as.numeric(V3),
trt_liberation = as.numeric(V4),
sd_death = as.numeric(V5),
sd_extubation = as.numeric(V6))
hurdle_imp_mort_worse_lib <- hurdle_imp_mort_worse_lib %>%
mutate(max_post = pmax(post_prob_death, post_prob_liberation))
hurdle_imp_mort_worse_lib_power <- hurdle_imp_mort_worse_lib %>%
filter(post_prob_death >= 0.2 & post_prob_liberation >= 0.2) %>%
arrange(desc(max_post))
(hurdle_post_p_imp_mort_worse_lib <- nrow(hurdle_imp_mort_worse_lib_power[hurdle_imp_mort_worse_lib_power$max_post >= lambda_hurdle,])/nrow(hurdle_imp_mort_worse_lib))
################## improving liberation noning mortality ################################
hurdle_imp_lib_no_mort <- hurdle_imp_lib_no_mort %>%
mutate(X = seq(1, 2000, 1)) %>%
na.omit(hurdle_imp_lib_no_mort) %>%
filter(V1 != "Error") %>%
mutate(post_prob_death = as.numeric(V1),
post_prob_liberation = as.numeric(V2),
trt_death = as.numeric(V3),
trt_liberation = as.numeric(V4),
sd_death = as.numeric(V5),
sd_extubation = as.numeric(V6))
hurdle_imp_lib_no_mort <- hurdle_imp_lib_no_mort %>%
mutate(max_post = pmax(post_prob_death, post_prob_liberation))
hurdle_imp_lib_no_mort_power <- hurdle_imp_lib_no_mort %>%
filter(post_prob_death >= 0.2 & post_prob_liberation >= 0.2) %>%
arrange(desc(max_post))
(hurdle_post_p_imp_lib_no_mort <- nrow(hurdle_imp_lib_no_mort_power[hurdle_imp_lib_no_mort_power$max_post >= lambda_hurdle,])/nrow(hurdle_imp_lib_no_mort))
################## improving mortality noning liberation ################################
hurdle_imp_mort_no_lib <- hurdle_imp_mort_no_lib %>%
mutate(X = seq(1, 2000, 1)) %>%
na.omit(hurdle_imp_mort_no_lib) %>%
filter(V1 != "Error") %>%
mutate(post_prob_death = as.numeric(V1),
post_prob_liberation = as.numeric(V2),
trt_death = as.numeric(V3),
trt_liberation = as.numeric(V4),
sd_death = as.numeric(V5),
sd_extubation = as.numeric(V6))
hurdle_imp_mort_no_lib <- hurdle_imp_mort_no_lib %>%
mutate(max_post = pmax(post_prob_death, post_prob_liberation))
hurdle_imp_mort_no_lib_power <- hurdle_imp_mort_no_lib %>%
filter(post_prob_death >= 0.2 & post_prob_liberation >= 0.2) %>%
arrange(desc(max_post))
(hurdle_post_p_imp_mort_no_lib <- nrow(hurdle_imp_mort_no_lib_power[hurdle_imp_mort_no_lib_power$max_post >= lambda_hurdle,])/nrow(hurdle_imp_mort_no_lib))
hurdle_1 <- data.frame(scenario = c("no_eff", "worsen_both", "imp_both", "worsen_mort_imp_lib", "worsen_lib_imp_mort", "imp_lib_no_mort", "imp_mort_no_lib"),
post_p = c(hurdle_p_noeffect, hurdle_post_p_worsen_both, hurdle_post_p_imp_both, hurdle_post_p_imp_lib_worse_mort, hurdle_post_p_imp_mort_worse_lib, hurdle_post_p_imp_lib_no_mort, hurdle_post_p_imp_mort_no_lib),
trt_death_est_mean = c(mean(hurdle_noeffect$trt_death), mean(hurdle_worsen_both$trt_death), mean(hurdle_imp_both$trt_death), mean(hurdle_imp_lib_worse_mort$trt_death), mean(hurdle_imp_mort_worse_lib$trt_death), mean(hurdle_imp_lib_no_mort$trt_death), mean(hurdle_imp_mort_no_lib$trt_death)),
trt_liberation_est_mean = c(mean(hurdle_noeffect$trt_liberation), mean(hurdle_worsen_both$trt_liberation), mean(hurdle_imp_both$trt_liberation), mean(hurdle_imp_lib_worse_mort$trt_liberation), mean(hurdle_imp_mort_worse_lib$trt_liberation), mean(hurdle_imp_lib_no_mort$trt_liberation), mean(hurdle_imp_mort_no_lib$trt_liberation)),
sd_death_est_mean = c(mean(hurdle_noeffect$sd_death), mean(hurdle_worsen_both$sd_death), mean(hurdle_imp_both$sd_death), mean(hurdle_imp_lib_worse_mort$sd_death), mean(hurdle_imp_mort_worse_lib$sd_death), mean(hurdle_imp_lib_no_mort$sd_death), mean(hurdle_imp_mort_no_lib$sd_death)),
sd_liberation_est_mean = c(mean(hurdle_noeffect$sd_extubation), mean(hurdle_worsen_both$sd_extubation), mean(hurdle_imp_both$sd_extubation), mean(hurdle_imp_lib_worse_mort$sd_extubation), mean(hurdle_imp_mort_worse_lib$sd_extubation), mean(hurdle_imp_lib_no_mort$sd_extubation), mean(hurdle_imp_mort_no_lib$sd_extubation)))
hurdle_1[, 1:2]
sqrt(hurdle_1$post_p*(1 - hurdle_1$post_p)/nrow(hurdle_imp_mort_no_lib))[c(1,3,2,5,4,7,6)]
library(tidyverse)
library(dplyr)
setwd("C:/Users/Anna Heath/OneDrive/OneDrive - SickKids/Admin Anna/Hiring and Staff/Ziming Chen 2022/PRACTICAL/SimulationMar20/Weibull_AH/ordinal1")
Ordinal1_noeffect <- read.csv("Practical_ordinal1_noeffect.csv")
Ordinal1_imp_both <- read.csv("Practical_ordinal1_imp_both.csv")
Ordinal1_imp_lib_worse_mort <- read.csv("Practical_ordinal1_imp_lib_worse_mort.csv")
Ordinal1_imp_mort_worse_lib <- read.csv("Practical_ordinal1_imp_mort_worse_lib.csv")
Ordinal1_worsen_both <- read.csv("Practical_ordinal1_worsen_both.csv")
Ordinal1_imp_lib_no_mort <- read.csv("Practical_ordinal1_imp_lib_no_mort.csv")
Ordinal1_imp_mort_no_lib <- read.csv("Practical_ordinal1_imp_mort_no_lib.csv")
#-------calculating lambda that controls type one error----------
Ordinal1_noeffect <- na.omit(Ordinal1_noeffect) %>%
filter(V1 != "Error")
Ordinal1_noeffect <- Ordinal1_noeffect %>%
mutate(X = seq(1, nrow(Ordinal1_noeffect), 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
Ordinal1_noeffect <- Ordinal1_noeffect %>%
arrange(desc(post_p))
#0.9605856
(lambda_Ordinal1 <- quantile(as.numeric(Ordinal1_noeffect$post_p), probs = c(0.95)))
lambda_Ordinal1 <- 0.955
(Ordinal1_post_p_noeffect <- nrow(Ordinal1_noeffect[Ordinal1_noeffect$post_p > lambda_Ordinal1,])/nrow(Ordinal1_noeffect))
#--------based on the lambda, calculating "power" for each scenario----------
Ordinal1_worsen_both <- na.omit(Ordinal1_worsen_both) %>%
filter(V1 != "Error")
Ordinal1_worsen_both <- Ordinal1_worsen_both %>%
mutate(X = seq(1, nrow(Ordinal1_worsen_both), 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
(Ordinal1_post_p_worsen_both <- nrow(Ordinal1_worsen_both[Ordinal1_worsen_both$post_p > lambda_Ordinal1,])/nrow(Ordinal1_worsen_both))
Ordinal1_imp_both <- na.omit(Ordinal1_imp_both) %>%
filter(V1 != "Error")
Ordinal1_imp_both <- Ordinal1_imp_both %>%
mutate(X = seq(1, nrow(Ordinal1_imp_both), 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
(Ordinal1_post_p_imp_both <- nrow(Ordinal1_imp_both[Ordinal1_imp_both$post_p > lambda_Ordinal1,])/nrow(Ordinal1_imp_both))
Ordinal1_imp_lib_worse_mort <- na.omit(Ordinal1_imp_lib_worse_mort) %>%
filter(V1 != "Error")
Ordinal1_imp_lib_worse_mort <- Ordinal1_imp_lib_worse_mort %>%
mutate(X = seq(1, nrow(Ordinal1_imp_lib_worse_mort), 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
(Ordinal1_post_imp_lib_worse_mort <- nrow(Ordinal1_imp_lib_worse_mort[Ordinal1_imp_lib_worse_mort$post_p > lambda_Ordinal1,])/nrow(Ordinal1_imp_lib_worse_mort))
Ordinal1_imp_mort_worse_lib <- na.omit(Ordinal1_imp_mort_worse_lib) %>%
filter(V1 != "Error")
Ordinal1_imp_mort_worse_lib <- Ordinal1_imp_mort_worse_lib %>%
mutate(X = seq(1, nrow(Ordinal1_imp_mort_worse_lib), 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
(Ordinal1_post_imp_mort_worse_lib <- nrow(Ordinal1_imp_mort_worse_lib[Ordinal1_imp_mort_worse_lib$post_p > lambda_Ordinal1,])/nrow(Ordinal1_imp_mort_worse_lib))
Ordinal1_imp_lib_no_mort <- na.omit(Ordinal1_imp_lib_no_mort) %>%
filter(V1 != "Error")
Ordinal1_imp_lib_no_mort <- Ordinal1_imp_lib_no_mort %>%
mutate(X = seq(1, nrow(Ordinal1_imp_lib_no_mort), 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
(Ordinal1_post_imp_lib_no_mort <- nrow(Ordinal1_imp_lib_no_mort[Ordinal1_imp_lib_no_mort$post_p > lambda_Ordinal1,])/nrow(Ordinal1_imp_lib_no_mort))
Ordinal1_imp_mort_no_lib <- na.omit(Ordinal1_imp_mort_no_lib) %>%
filter(V1 != "Error")
Ordinal1_imp_mort_no_lib <- Ordinal1_imp_mort_no_lib %>%
mutate(X = seq(1, nrow(Ordinal1_imp_mort_no_lib), 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
(Ordinal1_post_imp_mort_no_lib <- nrow(Ordinal1_imp_mort_no_lib[Ordinal1_imp_mort_no_lib$post_p > lambda_Ordinal1,])/nrow(Ordinal1_imp_mort_no_lib))
Ordinal1_1 <- data.frame(scenario = c("no_eff", "worsen_both", "imp_both", "worsen_mort_imp_lib", "worsen_lib_imp_mort", "imp_lib_no_mort", "imp_mort_no_lib"),
post_p = c(Ordinal1_post_p_noeffect, Ordinal1_post_p_worsen_both, Ordinal1_post_p_imp_both, Ordinal1_post_imp_lib_worse_mort, Ordinal1_post_imp_mort_worse_lib, Ordinal1_post_imp_lib_no_mort, Ordinal1_post_imp_mort_no_lib),
trt_est_mean = c(mean(as.numeric(Ordinal1_noeffect$trt_effect)), mean(as.numeric(Ordinal1_worsen_both$trt_effect)), mean(as.numeric(Ordinal1_imp_both$trt_effect)), mean(as.numeric(Ordinal1_imp_lib_worse_mort$trt_effect)), mean(as.numeric(Ordinal1_imp_mort_worse_lib$trt_effect)), mean(as.numeric(Ordinal1_imp_lib_worse_mort$trt_effect)), mean(as.numeric(Ordinal1_imp_mort_worse_lib$trt_effect))),
sd_est_mean = c(mean(as.numeric(Ordinal1_noeffect$sd)), mean(as.numeric(Ordinal1_worsen_both$sd)), mean(as.numeric(Ordinal1_imp_both$sd)), mean(as.numeric(Ordinal1_imp_lib_worse_mort$sd)), mean(as.numeric(Ordinal1_imp_mort_worse_lib$sd)), mean(as.numeric(Ordinal1_imp_lib_worse_mort$sd)), mean(as.numeric(Ordinal1_imp_mort_worse_lib$sd))))
sqrt(Ordinal1_1$post_p*(1 - Ordinal1_1$post_p)/nrow(Ordinal1_imp_lib_no_mort))[c(1,3,2,5,4,7,6)]
Ordinal1_1
library(tidyverse)
library(dplyr)
setwd("C:/Users/Anna Heath/OneDrive/OneDrive - SickKids/Admin Anna/Hiring and Staff/Ziming Chen 2022/PRACTICAL/SimulationMar20/Weibull_AH/ordinal3")
Ordinal3_noeffect <- read.csv("Ordinal3_noeffect.csv")
Ordinal3_imp_both <- read.csv("Ordinal3_imp_both.csv")
Ordinal3_imp_lib_worse_mort <- read.csv("Ordinal3_imp_lib_worse_mort.csv")
Ordinal3_imp_mort_worse_lib <- read.csv("Ordinal3_imp_mort_worse_lib.csv")
Ordinal3_worsen_both <- read.csv("Ordinal3_worsen_both.csv")
Ordinal3_imp_lib_no_mort <- read.csv("Ordinal3_imp_lib_no_mort.csv")
Ordinal3_imp_mort_no_lib <- read.csv("Ordinal3_imp_mort_no_lib.csv")
#-------calculating lambda that controls type one error----------
Ordinal3_noeffect <- na.omit(Ordinal3_noeffect) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
Ordinal3_noeffect <- Ordinal3_noeffect %>%
arrange(desc(post_p))
#0.9468489
(lambda_Ordinal3 <- quantile(Ordinal3_noeffect$post_p, probs = c(0.95)))
lambda_Ordinal3 <- 0.98
(Ordinal3_post_p_noeffect <- nrow(Ordinal3_noeffect[Ordinal3_noeffect$post_p > lambda_Ordinal3,])/nrow(Ordinal3_noeffect))
#--------based on the lambda, calculating "power" for each scenario----------
Ordinal3_worsen_both <- na.omit(Ordinal3_worsen_both) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
(Ordinal3_post_p_worsen_both <- nrow(Ordinal3_worsen_both[Ordinal3_worsen_both$post_p > lambda_Ordinal3,])/nrow(Ordinal3_worsen_both))
Ordinal3_imp_both <- na.omit(Ordinal3_imp_both) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
(Ordinal3_post_p_imp_both <- nrow(Ordinal3_imp_both[Ordinal3_imp_both$post_p > lambda_Ordinal3,])/nrow(Ordinal3_imp_both))
Ordinal3_imp_lib_worse_mort <- na.omit(Ordinal3_imp_lib_worse_mort) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
(Ordinal3_post_imp_lib_worse_mort <- nrow(Ordinal3_imp_lib_worse_mort[Ordinal3_imp_lib_worse_mort$post_p > lambda_Ordinal3,])/nrow(Ordinal3_imp_lib_worse_mort))
Ordinal3_imp_mort_worse_lib <- na.omit(Ordinal3_imp_mort_worse_lib) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
(Ordinal3_post_imp_mort_worse_lib <- nrow(Ordinal3_imp_mort_worse_lib[Ordinal3_imp_mort_worse_lib$post_p > lambda_Ordinal3,])/nrow(Ordinal3_imp_mort_worse_lib))
Ordinal3_imp_lib_no_mort <- na.omit(Ordinal3_imp_lib_no_mort) %>%
filter(V1 != "Error")
Ordinal3_imp_lib_no_mort <- Ordinal3_imp_lib_no_mort %>%
mutate(X = seq(1, nrow(Ordinal3_imp_lib_no_mort), 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
(Ordinal3_post_imp_lib_no_mort <- nrow(Ordinal3_imp_lib_no_mort[Ordinal3_imp_lib_no_mort$post_p > lambda_Ordinal3,])/nrow(Ordinal3_imp_lib_no_mort))
Ordinal3_imp_mort_no_lib <- na.omit(Ordinal3_imp_mort_no_lib) %>%
filter(V1 != "Error")
Ordinal3_imp_mort_no_lib <- Ordinal3_imp_mort_no_lib %>%
mutate(X = seq(1, nrow(Ordinal3_imp_mort_no_lib), 1)) %>%
rename(post_p = V1,
trt_effect = V2,
sd = V3)
(Ordinal3_post_imp_mort_no_lib <- nrow(Ordinal3_imp_mort_no_lib[Ordinal3_imp_mort_no_lib$post_p > lambda_Ordinal3,])/nrow(Ordinal3_imp_mort_no_lib))
Ordinal3_1 <- data.frame(scenario = c("no_eff", "worsen_both", "imp_both", "worsen_mort_imp_lib", "worsen_lib_imp_mort", "imp_lib_no_mort", "imp_mort_no_lib"),
post_p = c(Ordinal3_post_p_noeffect, Ordinal3_post_p_worsen_both, Ordinal3_post_p_imp_both, Ordinal3_post_imp_lib_worse_mort, Ordinal3_post_imp_mort_worse_lib, Ordinal3_post_imp_lib_no_mort, Ordinal3_post_imp_mort_no_lib),
trt_est_mean = c(mean(as.numeric(Ordinal3_noeffect$trt_effect)), mean(as.numeric(Ordinal3_worsen_both$trt_effect)), mean(as.numeric(Ordinal3_imp_both$trt_effect)), mean(as.numeric(Ordinal3_imp_lib_worse_mort$trt_effect)), mean(as.numeric(Ordinal3_imp_mort_worse_lib$trt_effect)), mean(as.numeric(Ordinal3_imp_lib_no_mort$trt_effect)), mean(as.numeric(Ordinal3_imp_mort_no_lib$trt_effect))),
sd_est_mean = c(mean(as.numeric(Ordinal3_noeffect$sd)), mean(as.numeric(Ordinal3_worsen_both$sd)), mean(as.numeric(Ordinal3_imp_both$sd)), mean(as.numeric(Ordinal3_imp_lib_worse_mort$sd)), mean(as.numeric(Ordinal3_imp_mort_worse_lib$sd)), mean(as.numeric(Ordinal3_imp_lib_no_mort$sd)), mean(as.numeric(Ordinal3_imp_mort_no_lib$sd))))
sqrt(Ordinal3_1$post_p*(1 - Ordinal3_1$post_p)/nrow(Ordinal3_imp_mort_no_lib))[c(1,3,2,5,4,7,6)]
library(tidyverse)
library(dplyr)
setwd("C:/Users/Anna Heath/OneDrive/OneDrive - SickKids/Admin Anna/Hiring and Staff/Ziming Chen 2022/PRACTICAL/SimulationMar20/Weibull_AH/ttest")
ttest_noeffect <- read.csv("ttest_noeffect.csv")
ttest_imp_both <- read.csv("ttest_imp_both.csv")
ttest_imp_lib_worse_mort <- read.csv("ttest_imp_lib_worse_mort.csv")
ttest_imp_mort_worse_lib <- read.csv("ttest_imp_mort_worse_lib.csv")
ttest_worsen_both <- read.csv("ttest_worsen_both.csv")
ttest_imp_lib_no_mort <- read.csv("ttest_imp_lib_no_mort.csv")
ttest_imp_mort_no_lib <- read.csv("ttest_imp_mort_no_lib.csv")
#-------calculating lambda that controls type one error----------
ttest_noeffect <- na.omit(ttest_noeffect) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2,
trt_effect = V3)
#type 1 error
(ttest_type1_error <- nrow(ttest_noeffect[ttest_noeffect$positive_difference == "Yes",])/nrow(ttest_noeffect))
#--------based on the lambda, calculating "power" for each scenario----------
ttest_worsen_both <- na.omit(ttest_worsen_both) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2,
trt_effect = V3)
(ttest_power_worsen_both <- nrow(ttest_worsen_both[ttest_worsen_both$positive_difference == "Yes",])/nrow(ttest_worsen_both))
ttest_imp_both <- na.omit(ttest_imp_both) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2,
trt_effect = V3)
(ttest_power_imp_both <- nrow(ttest_imp_both[ttest_imp_both$positive_difference == "Yes",])/nrow(ttest_imp_both))
ttest_imp_lib_worse_mort <- na.omit(ttest_imp_lib_worse_mort) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2,
trt_effect = V3)
(ttest_post_imp_lib_worse_mort <- nrow(ttest_imp_lib_worse_mort[ttest_imp_lib_worse_mort$positive_difference == "Yes",])/nrow(ttest_imp_lib_worse_mort))
ttest_imp_mort_worse_lib <- na.omit(ttest_imp_mort_worse_lib) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2,
trt_effect = V3)
(ttest_post_imp_mort_worse_lib <- nrow(ttest_imp_mort_worse_lib[ttest_imp_mort_worse_lib$positive_difference == "Yes",])/nrow(ttest_imp_mort_worse_lib))
ttest_imp_lib_no_mort <- na.omit(ttest_imp_lib_no_mort) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2,
trt_effect = V3)
(ttest_post_imp_lib_no_mort <- nrow(ttest_imp_lib_no_mort[ttest_imp_lib_no_mort$positive_difference == "Yes",])/nrow(ttest_imp_lib_no_mort))
ttest_imp_mort_no_lib <- na.omit(ttest_imp_mort_no_lib) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2,
trt_effect = V3)
(ttest_post_imp_mort_no_lib <- nrow(ttest_imp_mort_no_lib[ttest_imp_mort_no_lib$positive_difference == "Yes",])/nrow(ttest_imp_mort_no_lib))
ttest_1 <- data.frame(scenario = c("no_eff", "worsen_both", "imp_both", "worsen_mort_imp_lib", "worsen_lib_imp_mort", "imp_lib_no_mort", "imp_mort_no_lib"),
power = c(ttest_type1_error, ttest_power_worsen_both, ttest_power_imp_both, ttest_post_imp_lib_worse_mort, ttest_post_imp_mort_worse_lib, ttest_post_imp_lib_no_mort, ttest_post_imp_mort_no_lib),
trt_effect_est_mean = c(mean(ttest_noeffect$trt_effect), mean(ttest_worsen_both$trt_effect), mean(ttest_imp_both$trt_effect), mean(ttest_imp_lib_worse_mort$trt_effect), mean(ttest_imp_mort_worse_lib$trt_effect), mean(ttest_imp_lib_no_mort$trt_effect), mean(ttest_imp_mort_no_lib$trt_effect)))
sqrt(ttest_1$power*(1 - ttest_1$power)/nrow(ttest_imp_mort_no_lib))[c(1,3,2,5,4,7,6)]
library(tidyverse)
library(dplyr)
setwd("C:/Users/Anna Heath/OneDrive/OneDrive - SickKids/Admin Anna/Hiring and Staff/Ziming Chen 2022/PRACTICAL/SimulationMar20/Weibull_AH/wilcox")
wilcox_noeffect <- read.csv("wilcox_noeffect.csv")
wilcox_imp_both <- read.csv("wilcox_imp_both.csv")
wilcox_imp_lib_worse_mort <- read.csv("wilcox_imp_lib_worse_mort.csv")
wilcox_imp_mort_worse_lib <- read.csv("wilcox_imp_mort_worse_lib.csv")
wilcox_worsen_both <- read.csv("wilcox_worsen_both.csv")
wilcox_imp_lib_no_mort <- read.csv("wilcox_imp_lib_no_mort.csv")
wilcox_imp_mort_no_lib <- read.csv("wilcox_imp_mort_no_lib.csv")
#-------calculating lambda that controls type one error----------
wilcox_noeffect <- na.omit(wilcox_noeffect) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2)
#type 1 error
(wilcox_type1_error <- nrow(wilcox_noeffect[wilcox_noeffect$positive_difference == "Yes",])/nrow(wilcox_noeffect))
#--------based on the lambda, calculating "power" for each scenario----------
wilcox_worsen_both <- na.omit(wilcox_worsen_both) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2
)
(wilcox_power_worsen_both <- nrow(wilcox_worsen_both[wilcox_worsen_both$positive_difference == "Yes",])/nrow(wilcox_worsen_both))
wilcox_imp_both <- na.omit(wilcox_imp_both) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2
)
(wilcox_power_imp_both <- nrow(wilcox_imp_both[wilcox_imp_both$positive_difference == "Yes",])/nrow(wilcox_imp_both))
wilcox_imp_lib_worse_mort <- na.omit(wilcox_imp_lib_worse_mort) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2
)
(wilcox_post_imp_lib_worse_mort <- nrow(wilcox_imp_lib_worse_mort[wilcox_imp_lib_worse_mort$positive_difference == "Yes",])/nrow(wilcox_imp_lib_worse_mort))
wilcox_imp_mort_worse_lib <- na.omit(wilcox_imp_mort_worse_lib) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2
)
(wilcox_post_imp_mort_worse_lib <- nrow(wilcox_imp_mort_worse_lib[wilcox_imp_mort_worse_lib$positive_difference == "Yes",])/nrow(wilcox_imp_mort_worse_lib))
wilcox_imp_lib_no_mort <- na.omit(wilcox_imp_lib_no_mort) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2
)
(wilcox_post_imp_lib_no_mort <- nrow(wilcox_imp_lib_no_mort[wilcox_imp_lib_no_mort$positive_difference == "Yes",])/nrow(wilcox_imp_lib_no_mort))
wilcox_imp_mort_no_lib <- na.omit(wilcox_imp_mort_no_lib) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2
)
(wilcox_post_imp_mort_no_lib <- nrow(wilcox_imp_mort_no_lib[wilcox_imp_mort_no_lib$positive_difference == "Yes",])/nrow(wilcox_imp_mort_no_lib))
wilcox_1 <- data.frame(scenario = c("no_eff", "worsen_both", "imp_both", "worsen_mort_imp_lib", "worsen_lib_imp_mort", "imp_lib_no_mort", "imp_mort_no_lib"),
power = c(wilcox_type1_error, wilcox_power_worsen_both, wilcox_power_imp_both, wilcox_post_imp_lib_worse_mort, wilcox_post_imp_mort_worse_lib, wilcox_post_imp_lib_no_mort, wilcox_post_imp_mort_no_lib))
sqrt(wilcox_1$post_p*(1 - wilcox_1$post_p)/nrow(wilcox_imp_mort_no_lib))[c(1,3,2,5,4,7,6)]
library(tidyverse)
library(dplyr)
setwd("C:/Users/Anna Heath/OneDrive/OneDrive - SickKids/Admin Anna/Hiring and Staff/Ziming Chen 2022/PRACTICAL/SimulationMar20/Weibull_AH/wilcox")
wilcox_noeffect <- read.csv("wilcox_noeffect.csv")
wilcox_imp_both <- read.csv("wilcox_imp_both.csv")
wilcox_imp_lib_worse_mort <- read.csv("wilcox_imp_lib_worse_mort.csv")
wilcox_imp_mort_worse_lib <- read.csv("wilcox_imp_mort_worse_lib.csv")
wilcox_worsen_both <- read.csv("wilcox_worsen_both.csv")
wilcox_imp_lib_no_mort <- read.csv("wilcox_imp_lib_no_mort.csv")
wilcox_imp_mort_no_lib <- read.csv("wilcox_imp_mort_no_lib.csv")
#-------calculating lambda that controls type one error----------
wilcox_noeffect <- na.omit(wilcox_noeffect) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2)
#type 1 error
(wilcox_type1_error <- nrow(wilcox_noeffect[wilcox_noeffect$positive_difference == "Yes",])/nrow(wilcox_noeffect))
#--------based on the lambda, calculating "power" for each scenario----------
wilcox_worsen_both <- na.omit(wilcox_worsen_both) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2
)
(wilcox_power_worsen_both <- nrow(wilcox_worsen_both[wilcox_worsen_both$positive_difference == "Yes",])/nrow(wilcox_worsen_both))
wilcox_imp_both <- na.omit(wilcox_imp_both) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2
)
(wilcox_power_imp_both <- nrow(wilcox_imp_both[wilcox_imp_both$positive_difference == "Yes",])/nrow(wilcox_imp_both))
wilcox_imp_lib_worse_mort <- na.omit(wilcox_imp_lib_worse_mort) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2
)
(wilcox_post_imp_lib_worse_mort <- nrow(wilcox_imp_lib_worse_mort[wilcox_imp_lib_worse_mort$positive_difference == "Yes",])/nrow(wilcox_imp_lib_worse_mort))
wilcox_imp_mort_worse_lib <- na.omit(wilcox_imp_mort_worse_lib) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2
)
(wilcox_post_imp_mort_worse_lib <- nrow(wilcox_imp_mort_worse_lib[wilcox_imp_mort_worse_lib$positive_difference == "Yes",])/nrow(wilcox_imp_mort_worse_lib))
wilcox_imp_lib_no_mort <- na.omit(wilcox_imp_lib_no_mort) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2
)
(wilcox_post_imp_lib_no_mort <- nrow(wilcox_imp_lib_no_mort[wilcox_imp_lib_no_mort$positive_difference == "Yes",])/nrow(wilcox_imp_lib_no_mort))
wilcox_imp_mort_no_lib <- na.omit(wilcox_imp_mort_no_lib) %>%
mutate(X = seq(1, 2000, 1)) %>%
rename(positive_difference = V1,
p_val = V2
)
(wilcox_post_imp_mort_no_lib <- nrow(wilcox_imp_mort_no_lib[wilcox_imp_mort_no_lib$positive_difference == "Yes",])/nrow(wilcox_imp_mort_no_lib))
wilcox_1 <- data.frame(scenario = c("no_eff", "worsen_both", "imp_both", "worsen_mort_imp_lib", "worsen_lib_imp_mort", "imp_lib_no_mort", "imp_mort_no_lib"),
power = c(wilcox_type1_error, wilcox_power_worsen_both, wilcox_power_imp_both, wilcox_post_imp_lib_worse_mort, wilcox_post_imp_mort_worse_lib, wilcox_post_imp_lib_no_mort, wilcox_post_imp_mort_no_lib))
sqrt(wilcox_1$power*(1 - wilcox_1$power)/nrow(wilcox_imp_mort_no_lib))[c(1,3,2,5,4,7,6)]
ggplot(dat, aes(x = value, y = scenario, color = name)) +
geom_point(size = 2.5) +
theme_bw()  +
scale_y_discrete(labels = c('Shorter Ventilation Only',
'Benefit for Death Alone',
"Shorter Ventilation \n and Harm for Death",
"Benefit for Death and \n Longer Ventilation",
"Harm for Both",
'Benefit for Both',
"No Treatment Effect"
))+
labs(x = "Probability of Positive Treatment Effect",
y = "Treatment Effect Scenario",
color = "Analysis Model") +
scale_color_discrete(label = c(
"Binary Death with \n Time to Liberation",
"10 Category Ordinal",
"3 Category Ordinal",
"Competing Risk Model",
"KJL Test",
"T-Test",
"Wilcoxon Test"))
source("C:/Users/Anna Heath/OneDrive/OneDrive - SickKids/Admin Anna/Hiring and Staff/Ziming Chen 2022/PRACTICAL/SimulationMar20/Weibull_AH/results/ttest_results.R")
source("C:/Users/Anna Heath/OneDrive/OneDrive - SickKids/Admin Anna/Hiring and Staff/Ziming Chen 2022/PRACTICAL/SimulationMar20/Weibull_AH/results/wilcox_results.R")
source("C:/Users/Anna Heath/OneDrive/OneDrive - SickKids/Admin Anna/Hiring and Staff/Ziming Chen 2022/PRACTICAL/SimulationMar20/Weibull_AH/results/LR_results.R")
source("C:/Users/Anna Heath/OneDrive/OneDrive - SickKids/Admin Anna/Hiring and Staff/Ziming Chen 2022/PRACTICAL/SimulationMar20/Weibull_AH/results/BinSurv_results.R")
source("C:/Users/Anna Heath/OneDrive/OneDrive - SickKids/Admin Anna/Hiring and Staff/Ziming Chen 2022/PRACTICAL/SimulationMar20/Weibull_AH/results/CR_results.R")
source("C:/Users/Anna Heath/OneDrive/OneDrive - SickKids/Admin Anna/Hiring and Staff/Ziming Chen 2022/PRACTICAL/SimulationMar20/Weibull_AH/results/ordinal1_results.R")
source("C:/Users/Anna Heath/OneDrive/OneDrive - SickKids/Admin Anna/Hiring and Staff/Ziming Chen 2022/PRACTICAL/SimulationMar20/Weibull_AH/results/ordinal3_results.R")
ttest_1[, 1:2]
wilcox_1[, 1:2]
LR_1[, 1:2]
binSurv_1[, 1:2]
CR_1[, 1:2]
Ordinal1_1[, 1:2]
Ordinal3_1[, 1:2]
dat <- data.frame(scenario = ttest_1[, 1],
ttest = ttest_1[, 2],
wilcox = wilcox_1[, 2],
KJL = LR_1[, 2],
binSurv = binSurv_1[, 2],
CR = CR_1[, 2],
Cat3 = Ordinal1_1[, 2],
Cat10 = Ordinal3_1[, 2]) %>%
pivot_longer( 2:8) %>%
mutate(scenario = factor(scenario, levels = c("imp_lib_no_mort",
"imp_mort_no_lib",
"worsen_mort_imp_lib",
"worsen_lib_imp_mort",
"worsen_both",
"imp_both",
"no_eff"
)))
library(ggplot2)
ggplot(dat, aes(x = value, y = scenario, color = name)) +
geom_point(size = 2.5) +
theme_bw()  +
scale_y_discrete(labels = c('Shorter Ventilation Only',
'Benefit for Death Alone',
"Shorter Ventilation \n and Harm for Death",
"Benefit for Death and \n Longer Ventilation",
"Harm for Both",
'Benefit for Both',
"No Treatment Effect"
)) +
labs(x = "Probability of Positive Treatment Effect",
y = "Treatment Effect Scenario",
color = "Analysis Model") +
scale_color_discrete(label = c(
"Binary Death with \n Time to Liberation",
"10 Category Ordinal",
"3 Category Ordinal",
"Competing Risk Model",
"KJL Test",
"T-Test",
"Wilcoxon Test"))
